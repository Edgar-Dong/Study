if (isModule) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

def config = rootProject.ext.android
def appId = rootProject.ext.appId

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        if (!isModule){
            applicationId appId["component_module1"]
        }
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        sourceSets {
            main {
                if (isModule) {
                    manifest.srcFile 'src/main/library/AndroidManifest.xml'
                }
            }
        }

        //arouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //resourcePrefix资源前缀限定，只能限定布局文件名和value资源的key，并不能限定图片资源的文件名
    //给电商工程加上前缀约束shopping_
    resourcePrefix "m1_"
}

def implementationDependencies = rootProject.ext.dependencies
def processors = rootProject.ext.annotationProcessor
def androidTestImplementationDependencies = rootProject.ext.androidTestImplementationDependencies
def testImplementationDependencies = rootProject.ext.testImplementationDependencies

dependencies {

    implementation implementationDependencies.appcompat
    implementation implementationDependencies.material
    implementation implementationDependencies.constraintlayout
    testImplementation testImplementationDependencies.junit
    androidTestImplementation androidTestImplementationDependencies.ext_junit
    androidTestImplementation androidTestImplementationDependencies.espresso_core

    api project(path: ':common')

    implementation implementationDependencies.arouter_api//arouter
    annotationProcessor processors.arouter_compiler//arouter
}